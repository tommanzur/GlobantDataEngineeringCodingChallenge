name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2

      - name: Copy files to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."
          target: "${{ secrets.TARGET_DIR }}"

      - name: Run deployment script on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Change to target directory
            cd ${{ secrets.TARGET_DIR }}

            # Update package lists and install Docker
            sudo apt-get -y update
            sudo apt-get -y install docker.io

            # Start Docker service
            sudo systemctl start docker
            sudo systemctl enable docker

            # Install docker-compose
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

            # Remove existing conflicting networks
            sudo docker network prune -f

            # Create the database.env file with necessary environment variables
            echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" > database.env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> database.env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> database.env

            # Create the pgadmin.env file with necessary environment variables
            echo "PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}" > pgadmin.env
            echo "PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}" >> pgadmin.env

            # Pull the latest Docker image and update the Docker Compose setup
            sudo /usr/local/bin/docker-compose up -d --build
